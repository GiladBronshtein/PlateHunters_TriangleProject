


table, th, td {
    border: 0px solid black;
}

.checkbox-wrapper-19 {
    box-sizing: border-box;
    --background-color: #fff;
    --checkbox-height: 22px;
}

@-moz-keyframes dothabottomcheck-19 {
    0% {
        height: 0;
    }

    100% {
        height: calc(var(--checkbox-height) / 2);
    }
}

@-webkit-keyframes dothabottomcheck-19 {
    0% {
        height: 0;
    }

    100% {
        height: calc(var(--checkbox-height) / 2);
    }
}

@keyframes dothabottomcheck-19 {
    0% {
        height: 0;
    }

    100% {
        height: calc(var(--checkbox-height) / 2);
    }
}

@keyframes dothatopcheck-19 {
    0% {
        height: 0;
    }

    50% {
        height: 0;
    }

    100% {
        height: calc(var(--checkbox-height) * 1.2);
    }
}

@-webkit-keyframes dothatopcheck-19 {
    0% {
        height: 0;
    }

    50% {
        height: 0;
    }

    100% {
        height: calc(var(--checkbox-height) * 1.2);
    }
}

@-moz-keyframes dothatopcheck-19 {
    0% {
        height: 0;
    }

    50% {
        height: 0;
    }

    100% {
        height: calc(var(--checkbox-height) * 1.2);
    }
}

.checkbox-wrapper-19 input[type=checkbox] {
    display: none;
}

.checkbox-wrapper-19 .check-box1 {
    height: var(--checkbox-height);
    width: var(--checkbox-height);
    background-color: transparent;
    border: calc(var(--checkbox-height) * .1) solid #000;
    border-radius: 5px;
    position: relative;
    display: inline-block;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    -moz-transition: border-color ease 0.2s;
    -o-transition: border-color ease 0.2s;
    -webkit-transition: border-color ease 0.2s;
    transition: border-color ease 0.2s;
    cursor: pointer;
}

    .checkbox-wrapper-19 .check-box1::before,
    .checkbox-wrapper-19 .check-box1::after {
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        position: absolute;
        height: 0;
        width: calc(var(--checkbox-height) * .2);
        background-color: #34b93d;
        display: inline-block;
        -moz-transform-origin: left top;
        -ms-transform-origin: left top;
        -o-transform-origin: left top;
        -webkit-transform-origin: left top;
        transform-origin: left top;
        border-radius: 5px;
        content: " ";
        -webkit-transition: opacity ease 0.5;
        -moz-transition: opacity ease 0.5;
        transition: opacity ease 0.5;
    }

    .checkbox-wrapper-19 .check-box1::before {
        top: calc(var(--checkbox-height) * .72);
        left: calc(var(--checkbox-height) * .41);
        box-shadow: 0 0 0 calc(var(--checkbox-height) * .05) var(--background-color);
        -moz-transform: rotate(-135deg);
        -ms-transform: rotate(-135deg);
        -o-transform: rotate(-135deg);
        -webkit-transform: rotate(-135deg);
        transform: rotate(-135deg);
    }

    .checkbox-wrapper-19 .check-box1::after {
        top: calc(var(--checkbox-height) * .37);
        left: calc(var(--checkbox-height) * .05);
        -moz-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
        -o-transform: rotate(-45deg);
        -webkit-transform: rotate(-45deg);
        transform: rotate(-45deg);
    }

    .checkbox-wrapper-19 input[type=checkbox]:checked + .check-box1,
    .checkbox-wrapper-19 .check-box1.checked {
        border-color: #34b93d;
    }

    .checkbox-wrapper-19 input[type=checkbox]:disabled + .check-box1,
    .checkbox-wrapper-19 .check-box1:disabled {
        border-color: #ccc;
    }

    .checkbox-wrapper-19 input[type=checkbox]:checked + .check-box1::after,
    .checkbox-wrapper-19 .check-box1.checked::after {
        height: calc(var(--checkbox-height) / 2);
        -moz-animation: dothabottomcheck-19 0.2s ease 0s forwards;
        -o-animation: dothabottomcheck-19 0.2s ease 0s forwards;
        -webkit-animation: dothabottomcheck-19 0.2s ease 0s forwards;
        animation: dothabottomcheck-19 0.2s ease 0s forwards;
    }

    .checkbox-wrapper-19 input[type=checkbox]:checked + .check-box1::before,
    .checkbox-wrapper-19 .check-box1.checked::before {
        height: calc(var(--checkbox-height) * 1.2);
        -moz-animation: dothatopcheck-19 0.4s ease 0s forwards;
        -o-animation: dothatopcheck-19 0.4s ease 0s forwards;
        -webkit-animation: dothatopcheck-19 0.4s ease 0s forwards;
        animation: dothatopcheck-19 0.4s ease 0s forwards;
    }




.checkbox-wrapper-20 {
    box-sizing: border-box;
    --background-color: #fff;
    --checkbox-height: 22px;
}

@-moz-keyframes dothabottomcheck-20 {
    0% {
        height: 0;
    }

    100% {
        height: calc(var(--checkbox-height) / 2);
    }
}

@-webkit-keyframes dothabottomcheck-20 {
    0% {
        height: 0;
    }

    100% {
        height: calc(var(--checkbox-height) / 2);
    }
}

@keyframes dothabottomcheck-20 {
    0% {
        height: 0;
    }

    100% {
        height: calc(var(--checkbox-height) / 2);
    }
}

@keyframes dothatopcheck-20 {
    0% {
        height: 0;
    }

    50% {
        height: 0;
    }

    100% {
        height: calc(var(--checkbox-height) * 1.2);
    }
}

@-webkit-keyframes dothatopcheck-20 {
    0% {
        height: 0;
    }

    50% {
        height: 0;
    }

    100% {
        height: calc(var(--checkbox-height) * 1.2);
    }
}

@-moz-keyframes dothatopcheck-20 {
    0% {
        height: 0;
    }

    50% {
        height: 0;
    }

    100% {
        height: calc(var(--checkbox-height) * 1.2);
    }
}

.checkbox-wrapper-20 input[type=checkbox] {
    display: none;
}

.checkbox-wrapper-20 .check-box2 {
    height: var(--checkbox-height);
    width: var(--checkbox-height);
    background-color: transparent;
    border: calc(var(--checkbox-height) * .1) solid #000;
    border-radius: 5px;
    position: relative;
    display: inline-block;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    -moz-transition: border-color ease 0.2s;
    -o-transition: border-color ease 0.2s;
    -webkit-transition: border-color ease 0.2s;
    transition: border-color ease 0.2s;
    cursor: pointer;
}

    .checkbox-wrapper-20 .check-box2::before,
    .checkbox-wrapper-20 .check-box2::after {
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        position: absolute;
        height: 0;
        width: calc(var(--checkbox-height) * .2);
        background-color: #34b93d;
        display: inline-block;
        -moz-transform-origin: left top;
        -ms-transform-origin: left top;
        -o-transform-origin: left top;
        -webkit-transform-origin: left top;
        transform-origin: left top;
        border-radius: 5px;
        content: " ";
        -webkit-transition: opacity ease 0.5;
        -moz-transition: opacity ease 0.5;
        transition: opacity ease 0.5;
    }

    .checkbox-wrapper-20 .check-box2::before {
        top: calc(var(--checkbox-height) * .72);
        left: calc(var(--checkbox-height) * .41);
        box-shadow: 0 0 0 calc(var(--checkbox-height) * .05) var(--background-color);
        -moz-transform: rotate(-135deg);
        -ms-transform: rotate(-135deg);
        -o-transform: rotate(-135deg);
        -webkit-transform: rotate(-135deg);
        transform: rotate(-135deg);
    }

    .checkbox-wrapper-20 .check-box2::after {
        top: calc(var(--checkbox-height) * .37);
        left: calc(var(--checkbox-height) * .05);
        -moz-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
        -o-transform: rotate(-45deg);
        -webkit-transform: rotate(-45deg);
        transform: rotate(-45deg);
    }

    .checkbox-wrapper-20 input[type=checkbox]:checked + .check-box2,
    .checkbox-wrapper-20 .check-box2.checked {
        border-color: #34b93d;
    }

    .checkbox-wrapper-20 input[type=checkbox]:disabled + .check-box2,
    .checkbox-wrapper-20 .check-box2:disabled {
        border-color: #ccc;
    }

    .checkbox-wrapper-20 input[type=checkbox]:checked + .check-box2::after,
    .checkbox-wrapper-20 .check-box2.checked::after {
        height: calc(var(--checkbox-height) / 2);
        -moz-animation: dothabottomcheck-19 0.2s ease 0s forwards;
        -o-animation: dothabottomcheck-19 0.2s ease 0s forwards;
        -webkit-animation: dothabottomcheck-19 0.2s ease 0s forwards;
        animation: dothabottomcheck-19 0.2s ease 0s forwards;
    }

    .checkbox-wrapper-20 input[type=checkbox]:checked + .check-box2::before,
    .checkbox-wrapper-20 .check-box2.checked::before {
        height: calc(var(--checkbox-height) * 1.2);
        -moz-animation: dothatopcheck-19 0.4s ease 0s forwards;
        -o-animation: dothatopcheck-19 0.4s ease 0s forwards;
        -webkit-animation: dothatopcheck-19 0.4s ease 0s forwards;
        animation: dothatopcheck-19 0.4s ease 0s forwards;
    }




/************ Rounded Table *******************/

table.rounded-table {
    border-collapse: separate; /* Change to separate */
    border-spacing: 0; /* Remove border spacing */
    position: relative;
    background-color: white;
    height: 200px;
}

/*.rounded-table tr:hover {
    background-color: #fff8ea;
}*/


.roundedTbody tr:hover {
    background-color: #fff8ea;
}


/* Apply rounded corners */
.rounded-table {
    border-radius: 8px;
    overflow: hidden;
    width: 800px;
}

    /* Align header content in specific columns */
    .rounded-table th:nth-child(3) {
        text-align: center;
        border: 0px solid black;
        width: 110px;
    }


    .rounded-table th:nth-child(4) {
        text-align: center;
        border: 0px solid black;
        width: 80px;
    }

    .rounded-table th:nth-child(5) {
        text-align: center;
        border: 0px solid black;
        width: 130px;
    }



    .rounded-table th:nth-child(1) {
        text-align: center;
        width: 80px;
    }

/******** SCROLL ***********/

::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.05);
    background-color: #F5F5F5;
}

::-webkit-scrollbar {
    width: 13px;
    background-color: #F5F5F5;
}

::-webkit-scrollbar-thumb {
    background-color: #FFD68A;
    background-clip: padding-box;
    background-image: -webkit-linear-gradient(90deg, rgba(255, 255, 255, .2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .2) 50%, rgba(255, 255, 255, .2) 75%, transparent 75%, transparent)
}











    ::-webkit-scrollbar-thumb:hover {
        background-color: rgb(112, 112, 112);
    }

    ::-webkit-scrollbar-thumb:active {
        background-color: rgb(128, 128, 128);
    }

/* scroll Buttons */
::-webkit-scrollbar-button:single-button {
    background-color: #eee;
    display: block;
    background-size: 12px;
    background-repeat: no-repeat;
}

    /* Up */
    ::-webkit-scrollbar-button:single-button:vertical:decrement {
        height: 12px;
        width: 16px;
        background-position: center 4px;
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='rgb(73, 73, 73)'><polygon points='50,00 0,50 100,50'/></svg>");
    }

        ::-webkit-scrollbar-button:single-button:vertical:decrement:hover {
            background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='rgb(112, 112, 112)'><polygon points='50,00 0,50 100,50'/></svg>");
        }

        ::-webkit-scrollbar-button:single-button:vertical:decrement:active {
            background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='rgb(128, 128, 128)'><polygon points='50,00 0,50 100,50'/></svg>");
        }

    /* Down */
    ::-webkit-scrollbar-button:single-button:vertical:increment {
        height: 12px;
        width: 16px;
        background-position: center 2px;
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='rgb(73, 73, 73)'><polygon points='0,0 100,0 50,50'/></svg>");
    }

        ::-webkit-scrollbar-button:single-button:vertical:increment:hover {
            background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='rgb(112, 112, 112)'><polygon points='0,0 100,0 50,50'/></svg>");
        }

/*        ::-webkit-scrollbar-button:single-button:vertical:increment:active {
            background-image
        }*/








            /**********MAGIC***********/
            tbody {
    background-color: white;
    display: block;
    max-height: 380px;
    overflow-y: auto;
    overflow-x:hidden;
}

    thead, tbody tr {
        display: table;
        width: 100%;
        table-layout: fixed;
    }

/* Align content in specific columns */
.rounded-table td:nth-child(3) {
    width: 80px;
}

.rounded-table td:nth-child(4) {
    width: 65px;
}

.rounded-table td:nth-child(5) {
    width: 80px;
}

.rounded-table td:nth-child(2)
{
    width:280px; /*GAME NAME*/
    text-align:right;
}
.rounded-table td:nth-child(1) {
    width: 60px;
}



 /**************************/

    /* Style table headers */
    .rounded-table th {
        background-color: #f2f2f2;
        padding: 7px;
        line-height: 30px;
        top: 0;
    }

    .rounded-table tr {
        line-height: 1px;
        padding: 1px;
    }


    /* Style table cells */
    .rounded-table td {
        padding: 5px;
        border-top: 0px solid #e0e0e0; /* Add a small top border for separation */
    }

        /* Align content in specific columns */
        .rounded-table td:nth-child(1),
        .rounded-table td:nth-child(3),
        .rounded-table td:nth-child(4),
        .rounded-table td:nth-child(5) {
            text-align: center;
        }

        .rounded-table td:nth-child(2) {
            text-align: right;
        }

/* Add outer border to the table */
.rounded-table {
    border: 1px solid #ccc;
}

/************ ICONs HOVER EFFECT *******************/

/* Change color on hover for the icons */
.icon {
    font-size: 18px;
    transition: color 0.2s; /* Add a smooth color transition */
}

    .icon:hover {
        color: darkorange; /* Change the color on hover */
    }





/************ Tooltip *******************/


.custom-tooltip {
    /*position: relative;*/
    display: inline-block;
    cursor: pointer; /* Set cursor to indicate a tooltip */
    top: 50px;
}

    .custom-tooltip:hover .tooltip-content {
        display: block;
    }



.tooltip-content {
    display: none;
    position: absolute;
    transform: translateX(-50%);
    background-color: #333;
    color: #fff;
    padding: 4px;
    border-radius: 4px;
    white-space: nowrap;
}

#newGameButton {
    direction: rtl;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 8px;
    height: 88px;
    z-index: 1;
    position: relative; /* Required for z-index to work */

}

.newGameButtonOut {
    transition: width 1.5s ease-out; /* Smooth transition effect */
    opacity: 0;
}

/* Container holding the div */
.newGameDIV {
    flex: 1;
    max-height: 90px;
    overflow: auto;
    opacity: 0; /* Initially invisible */
    transform: translateX(100%); /* Initially positioned to the right of its normal position */
    visibility: hidden; /* Initially hidden */
    animation-name: slideIn; /* Name of the animation */
    animation-duration: 0.8s; /* Duration of the animation */
    animation-fill-mode: forwards; /* Makes sure the final state of animation is retained */
    z-index: 2; /* Higher than the button */
    position: absolute; /* Required for z-index to work */
    align-items: center;
    justify-content: center;
    box-shadow: 4px 4px 4px 0px gray !important; /* Red Glow */
    border-radius:8px; /* Adjust as needed */
}

    #newGameButtonText {
        font-size: 16px;
        font-weight: bold;
    }


@keyframes slideIn {
    to {
        opacity: 1; /* Fully visible */
        transform: translateX(0); /* At its normal position */
        visibility: visible; /* Visible */
    }
}

.addGameTitle {
    font-size: 17px;
    font-weight: bold;
    margin-top: 15px;
    border-bottom: 1px solid white;
    margin-right: 15px;
    text-align: right;
    direction: rtl;
    position: relative;
}

    .addGameTitle span {
        font-size: 11px;
        color: slategray;
        margin-right:3px;
   }

.customInputContainer {
    flex-grow: 1; /* Allows the input to take the available space */
    text-align: center;
    align-items: center;
    display: flex;
    width: 380px; /* Adjust as needed */
    margin-right: 18px;
}


::deep .customInputContainer span {
    margin-right: 10px;

}

.grayed-table-container {
    opacity: 0.7 !important;
    color: gray !important;
    pointer-events: none;
}




.topDiv {
    position: fixed;
    top: 80px;
    left: 60px;
    width: 250px;
    height: 250px;
    z-index: 98;
    background-image: url('assets-images/minSign.png');
    background-repeat: no-repeat;
    display: flex;
    justify-content: center; /* Center horizontally */
    align-items: flex-start; /* Align vertically to the start */
}

.innerDiv {
    padding-top: 26px;
        width: 250px;
    display: flex;
    flex-direction: column;
    align-items: center;
}

    .innerDiv h3 {
        margin-bottom: 14px;
    }

    .innerDiv h5 {
        margin-bottom: 7px;
    }

    .innerDiv ul {
        margin: 0;
        padding-inline-start: 0; /* Set to 0 since we are customizing the bullet */
        list-style-type: none; /* Remove default bullets */
        padding-right: 26px;
    }

    .innerDiv li {
        position: relative;
        padding-right: 20px; /* Adjust this value to control spacing */
    }

        .innerDiv li::before {
            content: "🔔"; /* Your custom bullet */
            position: absolute;
            right: 0;
            top: 50%;
            transform: translateY(-50%); /* Vertically center the bullet */
        }



.bottomDiv {
    position: fixed;
    width: 350px; /* or whatever you prefer */
    bottom: -3px; /* This will stick it directly to the bottom */
    left: -50px;
    padding: 0px;
    z-index: 98;
}

.bottomDivImage {
    width: 100%; /* This will ensure the image takes the full width of the container */
    height: auto; /* This will maintain the image's aspect ratio */
    display: block; /* To remove any default margins/paddings */
    background: white;
    background-color: hsla(0, 100%, 50%, 0); /* This sets a fully transparent background */
}





.background {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    position: fixed; /* This will make sure the background covers the entire viewport */
}






#home {
    clip-path: url(#cache);
}

#red {
    fill: none;
    opacity: 0.02;
    stroke: orange;
    stroke-width: 12;
    stroke-miterlimit: 10;
    animation: show 4s;
    animation-fill-mode: forwards;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
}

#blue {
    fill: none;
    opacity: 0.15;
    stroke: green;
    stroke-width: 12;
    stroke-miterlimit: 10;
    animation: show 4s;
    animation-fill-mode: forwards;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
}

#light-blue {
    fill: none;
    opacity: 0.04;
    stroke: brown;
    stroke-width: 6;
    stroke-miterlimit: 10;
    stroke-dasharray: 200;
    stroke-dashoffset: 800;
    animation: draw 4s;
    animation-fill-mode: forwards;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
}

@keyframes draw {
    to {
        stroke-dashoffset: 0;
    }
}

@keyframes show {
    0% {
        opacity: 0.05;
    }

    50% {
        opacity: 0.03;
    }

    100% {
        opacity: 0.05;
    }
}
