@page "/EditGame/{gameCode}";
@inject HttpClient Http
@inject NavigationManager Nav
@inject IStringLocalizer<SharedResources> Localizer
@using TriangleProject.Shared.Models.Games;
@using TriangleProject.Shared.Models.GamesContent;
@using TriangleProject.Shared.Models.Users;


@if (gameData != null)
{
    <div class="editform">
        <EditForm Model="gameData" OnValidSubmit="formSubmit" OnInvalidSubmit="failedSubmit">
            <DataAnnotationsValidator />
            <table class="MainTable">
                <tr id="GameSettingTitle">
                    <th colspan="5">
                        @Localizer["GameSettings"] -
                        <label>@Localizer["GameEdit"] - GameID: @gameData.GameCode @msg</label>
                    </th>
                </tr>
                <tr id="GameNameSettings">
                    <td>
                        <i class="fa fa-check-circle icon"></i>
                        <label>@Localizer["GameName"]</label>
                    </td>
                    <td>
                        <CustomInputText @bind-Value="gameData.GameName" alert="" class="default-input" maxlength="30" minChars="2" style="width:300px;" />
                    </td>
                    <td rowspan="3" style="text-align:center;">
                        <table>
                            <tr>
                                <td>
                                    <div class="checkbox-wrapper-64">
                                        <label class="switch">
                                            <input type="checkbox">
                                            <span class="slider"></span>
                                        </label>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </td>
                    <td style="text-align:center;">
                        <div class="checkbox-wrapper-64">
                            <label class="switch">
                                <input type="checkbox">
                                <span class="slider"></span>
                            </label>
                        </div>
                    </td>
                </tr>
                <tr id="GameQuestionSettings">
                    <td>
                        <i class="fa fa-check-circle icon"></i>
                        <label>@Localizer["GameQuestion"]</label>
                    </td>
                    <td>
                        <CustomInputText @bind-Value="gameData.QuestionDescription" alert="" class="default-input" maxlength="30" minChars="2" style="width:300px;" />
                    </td>
                    <td style="text-align:center;">שלט עם כיתוב ותמונה</td>

                </tr>
            </table>
            <table class="Categories">
                <tr>
                    <td style="width:10%;">
                        <label>@Localizer["GameCorrectCategory"]</label>
                    </td>
                    <td>
                        <CustomInputText @bind-Value="gameData.QuestionCorrectCategory" alert="כתבו את הקטגוריה הנכונה" class="default-input" maxlength="30" minChars="2" style="width:200px;" />
                    </td>
                    <td style="width:12%;">
                        <label>@Localizer["GameWrongCategory"]</label>
                    </td>
                    <td>
                        <CustomInputText @bind-Value="gameData.QuestionWrongCategory" alert="כתבו את הקטגוריה הלא נכונה" class="default-input" maxlength="30" minChars="2" style="width:200px;" />
                    </td>
                    <td style="text-align:center;width:10%;">
                        <input type="submit" class="btn btn-primary" @onclick="formSubmit" value="@Localizer["Save"]" />
                    </td>
                </tr>
            </table>
            <div class="Answers">
                <div class="row">
                    <div class="col-6 col-md-4 division1">
                        <table style="background-color:#F7F7F7; border: 0px solid black;">
                            <tr style="background-color:#F7F7F7;">
                                <td style="text-align:center; height:15px;" colspan="5"> <b> הוספת תשובה </b></td>
                            </tr>
                            <tr style="border-bottom: 3px solid white; background-color:#F7F7F7;  height:80px;">
                                <td style="text-align:center;">
                                    <div class="textBTN">
                                        טקסט
                                        <button type="button" value="טקסט" class="picortext" @onclick="ChangeToPic">
                                            <i class="fa fa-file-text-o"></i>
                                        </button>
                                    </div>
                                </td>

                                <td style="text-align:center;width:10%;">
                                    <h3>או</h3>
                                </td>

                                <td style="text-align:center;" id="picBTN">
                                    <div class="picBTN">
                                        <button type="button" value="תמונה" class="picortext" @onclick="ChangeToText">
                                            <i class="fa fa-picture-o"></i>
                                        </button>
                                        תמונה

                                    </div>
                                </td>
                            </tr>
                            @if (textOrPic)
                            {
                                <tr style="background-color:#F7F7F7; height:50px; text-align:center;">
                                    <td>
                                        <div class="rightText">
                                            נכון
                                        </div>
                                    </td>
                                    <td>
                                        <div class="checkbox-wrapper-64">
                                            <label class="switch">
                                                <input type="checkbox" @bind="newIsCorrect" />
                                                <span class="slider"></span>
                                            </label>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="wrongText">

                                            לא נכון
                                        </div>
                                    </td>
                                </tr>
                                <tr style="height:100px;">
                                    <td colspan="3">
                                        <div class="plasteanswer">
                                            <div class="container">
                                                <img src="assets-images/plate_Hunters_Plate.png">
                                                <div class="centered">
                                                    <textarea id="story" placeholder="כתבו תשובה" rows="2" cols="7" @bind="inputData">
                                                                                                     </textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="3">
                                        <div id="answerBTN">
                                            <button type="button" class="btn btn-primary" value="הוספת תשובה" @onclick="AddTextAnswerToTable">הוספת תשובה</button>
                                        </div>
                                    </td>
                                </tr>
                            }
                            else
                            {
                                <tr style="background-color:#F7F7F7; height:50px; text-align:center;">
                                    <td>
                                        נכון
                                    </td>
                                    <td>
                                        <div class="checkbox-wrapper-64">
                                            <label class="switch">
                                                <input type="checkbox" @bind="newIsCorrect" />
                                                <span class="slider"></span>
                                            </label>
                                        </div>
                                    </td>
                                    <td>
                                        לא נכון
                                    </td>
                                </tr>
                                <tr style="height:100px;">
                                    <td colspan="3">
                                        <div class="plasteanswer">
                                            <div class="container">
                                                <img src="assets-images/plate_Hunters_Plate.png">
                                                <div class="centered">
                                                    <div class="tablerow">
                                                        @if (myFileImage != "")
                                                        {

                                                            <div class="img-wrapper">
                                                                <img src="@myFileImage" />
                                                            </div>
                                                            <div class="trashImage">
                                                                @if (myFileImage != "")
                                                                {
                                                                    <i class="fa fa-trash-o icon" style="font-size:20px;" @onclick="MakeDeleteList"></i>
                                                                }
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <label class="uploadImg" for="FileInputID">
                                                                <i class="fa fa-upload" aria-hidden="true" style="color:black;font-size:44px;"></i>
                                                            </label>
                                                            <InputFile id="FileInputID" OnChange="UploadFile" hidden />
                                                        }

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="3">
                                        <div id="answerBTN">
                                            <button type="button" class="btn btn-primary" value="הוספת תשובה" @onclick="AddPicAnswerToTable">הוספת תשובה</button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                    <div class="col-6 col-md-4 table1">
                        <table class="col-6 col-md-4 table table-hover">
                            <tr>
                                <th colspan="3" style="text-align:center; background-color:#EEF3E7;">
                                    @gameData.QuestionCorrectCategory
                                </th>
                            </tr>
                            <tbody class="correct-table">
                                @foreach (var item in tempAnswersData)
                                {
                                    @if (@item.IsCorrect)
                                    {

                                        <tr>
                                            <td style="width:80%;">
                                                @if (@item.HasImage)
                                                {
                                                    <div class="img-present">
                                                        <img src="@item.AnswerImageText" />
                                                    </div>
                                                }
                                                else
                                                {
                                                    @item.AnswerDescription
                                                }
                                            </td>
                                            <td style="width:10%;">
                                                <i class="fa fa-pencil icon" style="font-size:20px;"></i>
                                            </td>
                                            <td style="width:10%;">
                                                <i class="fa fa-trash-o icon" style="font-size:20px;" @onclick="@(() => RemoveFromTable(item.ID))"></i>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="col-6 col-md-4  table2">
                        <table class="col-6 col-md-4 table table-hover">
                            <tr>
                                <th colspan="3" style="text-align:center; background-color:#EEDFDF;">
                                    @gameData.QuestionWrongCategory
                                </th>
                            </tr>
                            <tbody class="wrong-table">
                                @foreach (var item in tempAnswersData)
                                {
                                    @if (!@item.IsCorrect)
                                    {
                                        <tr>
                                            <td style="width:80%;">
                                                @if (@item.HasImage)
                                                {
                                                    <div class="img-present">
                                                        <img src="@item.AnswerImageText" />
                                                    </div>
                                                }
                                                else
                                                {
                                                    @item.AnswerDescription
                                                }
                                            </td>
                                            <td style="width:10%;">

                                                <i class="fa fa-pencil icon" style="font-size:20px;"></i>
                                            </td>
                                            <td style="width:10%;">
                                                <i class="fa fa-trash-o icon" style="font-size:20px;" @onclick="@(() => RemoveFromTable(item.ID))"></i>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="footer">
                <table style="width:100%;">
                    <tr>
                        <td style="width:12%;">
                            <label>@Localizer["GameEndMessage"]</label>
                        </td>
                        <td style="width:30%;">
                            <InputText @bind-Value="gameData.GameEndMessage" style="width:300px;" />
                        </td>
                        <td style="text-align:center;">
                            @if (gameData.IsPublished == false)
                            {
                                <input type="submit" class="btn btn-success" @onclick="ShowModal" value="@Localizer["GamePublish"]" />
                            }
                            else
                            {
                                <input type="submit" class="btn btn-outline-success" @onclick="ShowModal" value="@Localizer["Unpublish"]" />
                            }
                        </td>
                        <td style="text-align:center;width:10%;">
                            <button class="btn btn-secondary" @onclick="CancelEdit">@Localizer["Back"]</button>
                        </td>
                    </tr>
                </table>
            </div>
        </EditForm>
    </div>
    <p>@pageMsg</p>
}

@code {
    ////////////////////////
    ///                  ///
    ///     Variables    ///
    ///                  ///
    ////////////////////////

    [CascadingParameter] public IModalService Modal { get; set; }

    [CascadingParameter]
    public int UserId { get; set; }

    [Parameter]
    public string gameCode { get; set; }

    [Parameter]
    public List<Games> GamesList { get; set; }

    GameDetails gameData;

    UserWithGames user;

    List<GameAnswers> answersDataToDelete = new List<GameAnswers>();

    List<GameAnswers> tempAnswersData = new List<GameAnswers>();

    List<string> DeleteImages = new List<string>();

    string myFileImage = "";
    long maxFileSize = 4194304; //4MB

    bool newIsPublished = false;
    bool newCanPublish = false;
    bool newIsCorrect = true;
    bool textOrPic = true;
    bool uploadButton = true;
    int gameNameLength = 0; // New variable to hold the length of gameData.GameName

    int gameAnswersCount = 0;
    string msg = "";
    string pageMsg = "";
    string inputData = "";

    //////////////////////
    ///                ///
    ///     Methods    ///
    ///                ///
    //////////////////////

    protected override async Task OnInitializedAsync()
    {
        try
        {
            gameData = await Http.GetFromJsonAsync<GameDetails>($"api/game/" + UserId + "/getGame/" + gameCode);
            gameNameLength = gameData.GameName.Count();
            gameAnswersCount = gameData.Answers.Count();

            //get all answers from database to tempTableData
            foreach (var answer in gameData.Answers)
            {
                var gameAnswer = new GameAnswers
                    {
                        ID = answer.ID,
                        // GameID = gameData.ID,
                        AnswerDescription = answer.AnswerDescription,
                        IsCorrect = answer.IsCorrect,
                        HasImage = answer.HasImage,
                        AnswerImageText = answer.AnswerImageText
                    };

                // Add the new GameAnswers object to the tempTableData list
                tempAnswersData.Add(gameAnswer);
            }

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            pageMsg = "Error getting game data";
        }
    }

    //edit game data save to database
    async Task EditGameData()
    {
        //AddToTable(); ---------------> LATEST CHANGE


        //return new gameData with the form details
        GameDetails newGame = new GameDetails()
            {
                ID = gameData.ID,
                GameCode = gameData.GameCode,
                GameName = gameData.GameName,
                QuestionDescription = gameData.QuestionDescription,
                GameEndMessage = gameData.GameEndMessage,
                CanPublish = gameData.CanPublish,
                IsPublished = gameData.IsPublished,
                QuestionCorrectCategory = gameData.QuestionCorrectCategory,
                QuestionWrongCategory = gameData.QuestionWrongCategory,
                Answers = tempAnswersData,
                AnswersToDelete = answersDataToDelete
            };

        await Http.PutAsJsonAsync($"api/game/" + UserId + "/updateGame/" + gameCode, newGame);
        Nav.NavigateTo("/Pagewithauth");
    }

    //cancel edit and return to page with auth
    void CancelEdit()
    {
        Nav.NavigateTo("/Pagewithauth");
    }

    //check if the game can be published
    async Task checkCanPublish()
    {
        newCanPublish = gameData.CanPublish;

        newCanPublish = await Http.GetFromJsonAsync<bool>($"api/game/" + UserId + "/canPublish/" + gameData.ID);
        if (newCanPublish == true)
        {
            newIsPublished = true;
        }
        else
        {
            newIsPublished = false;
        }
    }

    //form submit method
    void formSubmit()
    {
        EditGameData();
        checkCanPublish();
    }

    //failed submit method
    void failedSubmit()
    {
        msg = "failed to sumbit!";
    }

    //edit publish status method to change IsPublished value on the server db
    async Task changePublish(GameDetails game)
    {
        PublishGame gameToSend = new PublishGame();
        gameToSend.ID = gameData.ID;
        gameToSend.IsPublished = !gameData.IsPublished;

        var userRes = await Http.PostAsJsonAsync("api/game/" + UserId + "/publishGame", gameToSend);
        if (userRes.IsSuccessStatusCode == true)
        {
            gameData.IsPublished = gameToSend.IsPublished;

            if (gameData.IsPublished == true)
            {
                msg = "Game published";
            }
            else
            {
                msg = "Game unpublished";
            }
        }
        else
        {
            string error = userRes.Content.ReadAsStringAsync().Result;
            switch (error)
            {
                case "No Session":
                    msg = "Session error, please reload page";
                    break;
                case "User Not Logged In":
                    msg = "You are not logged in, please reload page to try again";
                    break;
                case "User Not Found":
                    msg = "the user details not found, please reload page to try again";
                    break;
                case "Game not created":
                    msg = "There was a problem creating the game";
                    break;
                case "Game code not created":
                    msg = "There was a problem generating the game code";
                    break;
                case "It's Not Your Game":
                    msg = "You tried to update a game that is not associated with your user";
                    break;
                case "This game cannot be published":
                    msg = @Localizer["The game does not meet the conditions of publishing"];
                    break;
            }
        }
    }

    //show modal method to show modal with confirmation message
    async Task ShowModal()
    {
        var parameters = new ModalParameters()
            .Add(nameof(PopUpComponent.Message), "האם ברצונכם לשנות את סטאטוס הפרסום?"); // Pass parameter(s) to modal component
        var messageForm = Modal.Show<PopUpComponent>("פרסום משחק", parameters); // Show modal
        var result = await messageForm.Result; // Get result from modal
        if (result.Confirmed)
        {
            await changePublish(gameData);
        }
        else
        {
            Console.WriteLine("Not confirmed");
        }
        var currentUrl = Nav.Uri;
        // Navigate to the current URL to reload the page
        Nav.NavigateTo(currentUrl);
    }

    //method to add new item into the answers list - later add to database
    private void AddTextAnswerToTable()
    {
        if (!string.IsNullOrWhiteSpace(inputData))
        {
            var gameAnswer = new GameAnswers
                {
                    // GameID = gameData.ID,
                    AnswerDescription = inputData,
                    IsCorrect = newIsCorrect,
                    HasImage = false,
                    AnswerImageText = "empty"
                };

            // Add the new GameAnswers object to the tempTableData list
            tempAnswersData.Add(gameAnswer);
            inputData = "";
        }
    }

    private void AddPicAnswerToTable()
    {
        if (!string.IsNullOrWhiteSpace(myFileImage))
        {
            var gameAnswer = new GameAnswers
                {
                    // GameID = gameData.ID,
                    AnswerDescription = "-",
                    IsCorrect = newIsCorrect,
                    HasImage = true,
                    AnswerImageText = myFileImage
                };

            // Add the new GameAnswers object to the tempTableData list
            tempAnswersData.Add(gameAnswer);
            myFileImage = "";
        }
    }

    //Remove at the index of clicked row
    void RemoveFromTable(int i)
    {
        Console.WriteLine(i);
        foreach (var item in tempAnswersData)
        {
            if (item.ID == i)
            {
                answersDataToDelete.Add(item);
                tempAnswersData.Remove(item);
                break;
            }
        }
    }

    //method to change the bool type from text to image
    void ChangeToPic()
    {
        //if textorpic clicked textorpic equals true
        textOrPic = true;
    }

    void ChangeToText()
    {
        //if textorpic clicked textorpic equals true
        textOrPic = false;
    }

    private async Task UploadFile(InputFileChangeEventArgs e)
    {
        var imageFiles = e.GetMultipleFiles();
        foreach (var file in imageFiles)
        {
            if (file.Size <= maxFileSize)
            {
                var buffer = new byte[file.Size];
                await file.OpenReadStream(maxFileSize).ReadAsync(buffer);
                var imageBase64 = Convert.ToBase64String(buffer);
                var saveResponse = await Http.PostAsJsonAsync("api/media/upload", imageBase64);

                if (saveResponse.IsSuccessStatusCode == true)
                {
                    string resizeUrl = saveResponse.Content.ReadAsStringAsync().Result;
                    myFileImage = "uploadedFiles/" + resizeUrl;
                }
            }
        }

    }

    private void MakeDeleteList()
    {
        DeleteImages.Add(myFileImage);
        myFileImage = "";
    }

    private void HideUploadButton()
    {

    }

    private async Task DeleteImage()
    {
        var saveResponse = await Http.PostAsJsonAsync("api/Media/deleteImages", DeleteImages);
        if (saveResponse.IsSuccessStatusCode == true)
        {
            msg = "deleted Successfully";
            DeleteImages.Clear();
        }
        else
        {
            msg = "DELETE ERROR";
        }
    }


    string inputClass = "";
    string alert = "";

    void countChars(string field)
    {
        // Get the length of the input field
        int length = field.Length;

        if (length > 3 && length <= 10)
        {
            inputClass = "good-input";
            alert = $"יש בין 3 ל10 תווים";
        }
        else if (length > 10 && length <= 15)
        {
            inputClass = "warnning-input";
            alert = "יש בין 10 ל15 תווים";
        }
        else if (length > 10 && length <= 15)
        {
            inputClass = "warnning-input";
            alert = "יש בין 10 ל15 תווים";
        }
        else if (length > 15 && length < 30)
        {
            inputClass = "danger-input";
            alert = "יש יותר מ15 תווים";
        }
        else if (length >= 30)
        {
            inputClass = "danger-input";
            alert = "הגעת למקסימום התווים";
        }
        else
        {
            inputClass = "";
            alert = "אין מספיק תווים";
        }


    }
}